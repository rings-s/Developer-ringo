# Generated by Django 5.1.4 on 2025-02-18 03:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with this email already exists.'}, help_text='Required. Your email address will be used for authentication.', max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(help_text='Required. Your first name.', max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(help_text='Required. Your last name.', max_length=30, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, help_text='Optional. Phone number for contact purposes.', max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')])),
                ('date_of_birth', models.DateField(blank=True, help_text='Optional. Date of birth for age verification.', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text="Indicates if the user's email has been verified.")),
                ('verification_token', models.CharField(blank=True, max_length=100)),
                ('verification_token_created', models.DateTimeField(blank=True, null=True)),
                ('verification_code', models.CharField(blank=True, max_length=6)),
                ('verification_code_created', models.DateTimeField(blank=True, null=True)),
                ('reset_code', models.CharField(blank=True, max_length=6)),
                ('reset_code_created', models.DateTimeField(blank=True, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.PositiveIntegerField(default=0)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_users', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('admin', 'Administrator'), ('client', 'Client'), ('staff', 'Staff')], help_text='Role name determines user permissions and access levels', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of role responsibilities')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this role is active. Unselect instead of deleting roles.')),
                ('permissions', models.ManyToManyField(blank=True, help_text='Specific permissions granted to this role', related_name='platform_roles', to='auth.permission', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='User biography or introduction')),
                ('avatar', models.ImageField(blank=True, help_text='Profile picture', null=True, upload_to='avatars/')),
                ('location', models.CharField(blank=True, help_text="User's general location for matching with nearby client", max_length=255)),
                ('timezone', models.CharField(blank=True, help_text="User's timezone for scheduling purposes", max_length=50)),
                ('preferences', models.JSONField(blank=True, default=dict, help_text='User preferences and settings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(blank=True, help_text='Last activity timestamp', null=True)),
                ('role', models.ForeignKey(help_text='User role determines permissions and access levels', null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='users.customuser')),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
                'ordering': ['-created_at'],
            },
        ),
    ]
